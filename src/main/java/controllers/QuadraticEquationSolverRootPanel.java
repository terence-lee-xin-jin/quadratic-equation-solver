package controllers;


import models.IComplexNumber;
import models.IVertex;
import models.QuadraticEquationSolver;

import javax.swing.*;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;

/**
 * The root panel (content pane) of the swing frame. Contains the user interface +
 * controller logic of the application
 *
 * The interface of this root panel is created using drag-and-drop from Netbeans IDE,
 * so the initComponents() method of this class contains generated code for the GUI
 *
 * @author Terence Lee
 */
public class QuadraticEquationSolverRootPanel extends javax.swing.JPanel {

    
    /**
     * Creates new form NewJPanel
     */
    public QuadraticEquationSolverRootPanel() {
        initComponents();

        initializeThreeUserInputTextFields();

        initializeSolveQuadraticEquationButton();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titleLabel = new javax.swing.JLabel();
        quadraticEquationPanel = new javax.swing.JPanel();
        coefficientATextField = new javax.swing.JTextField();
        xSquareLabel = new javax.swing.JLabel();
        firstPlusSymbolLabel = new javax.swing.JLabel();
        coefficientBTextField = new javax.swing.JTextField();
        zeroLabel = new javax.swing.JLabel();
        xLabel = new javax.swing.JLabel();
        constantCTextField = new javax.swing.JTextField();
        equalsLabel = new javax.swing.JLabel();
        secondPlusSymbolLabel = new javax.swing.JLabel();
        solveEquationButtonPanel = new javax.swing.JPanel();
        solveQuadraticEquationButton = new javax.swing.JButton();
        solutionPanel = new javax.swing.JPanel();
        solutionTitleLabel = new javax.swing.JLabel();
        solutionCoefficientsPanel = new javax.swing.JPanel();
        coefficientASolutionLabel = new javax.swing.JLabel();
        coefficientANonEditableTextField = new javax.swing.JTextField();
        coefficientBSolutionLabel = new javax.swing.JLabel();
        coefficientBNonEditableTextField = new javax.swing.JTextField();
        constantCSolutionLabel = new javax.swing.JLabel();
        constantCNonEditableTextField = new javax.swing.JTextField();
        typeOfRootsPanel = new javax.swing.JPanel();
        typeOfRootsLabel = new javax.swing.JLabel();
        typeOfRootsNonEditableTextField = new javax.swing.JTextField();
        firstAndSecondRootsPanel = new javax.swing.JPanel();
        firstRootLabel = new javax.swing.JLabel();
        firstRootNonEditableTextField = new javax.swing.JTextField();
        secondRootLabel = new javax.swing.JLabel();
        secondRootNonEditableTextField = new javax.swing.JTextField();
        discriminantAndVertexPanel = new javax.swing.JPanel();
        discriminantLabel = new javax.swing.JLabel();
        discriminantNonEditableTextField = new javax.swing.JTextField();
        vertexLabel = new javax.swing.JLabel();
        vertexNonEditableTextField = new javax.swing.JTextField();
        sumAndProductOfRootsPanel = new javax.swing.JPanel();
        sumOfRootsLabel = new javax.swing.JLabel();
        sumOfRootsNonEditableTextField = new javax.swing.JTextField();
        productOfRootsLabel = new javax.swing.JLabel();
        productOfRootsNonEditableTextField = new javax.swing.JTextField();

        titleLabel.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        titleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLabel.setText("Quadratic Equation Solver By Terence Lee");

        coefficientATextField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        coefficientATextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        coefficientATextField.setText("2");

        xSquareLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        xSquareLabel.setText("<html>x<sup>2</sup></html>");
        xSquareLabel.setToolTipText("");

        firstPlusSymbolLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        firstPlusSymbolLabel.setText("+");
        firstPlusSymbolLabel.setToolTipText("");

        coefficientBTextField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        coefficientBTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        coefficientBTextField.setText("1");

        zeroLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        zeroLabel.setText("0");

        xLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        xLabel.setText("x");
        xLabel.setToolTipText("");

        constantCTextField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        constantCTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        constantCTextField.setText("-1");

        equalsLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        equalsLabel.setText("=");

        secondPlusSymbolLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        secondPlusSymbolLabel.setText("+");
        secondPlusSymbolLabel.setToolTipText("");

        javax.swing.GroupLayout quadraticEquationPanelLayout = new javax.swing.GroupLayout(quadraticEquationPanel);
        quadraticEquationPanel.setLayout(quadraticEquationPanelLayout);
        quadraticEquationPanelLayout.setHorizontalGroup(
            quadraticEquationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(quadraticEquationPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(coefficientATextField, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(xSquareLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(firstPlusSymbolLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(coefficientBTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(xLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(secondPlusSymbolLabel)
                .addGap(18, 18, 18)
                .addComponent(constantCTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(equalsLabel)
                .addGap(18, 18, 18)
                .addComponent(zeroLabel)
                .addContainerGap(40, Short.MAX_VALUE))
        );
        quadraticEquationPanelLayout.setVerticalGroup(
            quadraticEquationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(quadraticEquationPanelLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(quadraticEquationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(coefficientATextField, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(xSquareLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(firstPlusSymbolLabel)
                    .addComponent(coefficientBTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(zeroLabel)
                    .addComponent(xLabel)
                    .addComponent(constantCTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(equalsLabel)
                    .addComponent(secondPlusSymbolLabel))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        solveQuadraticEquationButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        solveQuadraticEquationButton.setText("Solve Quadratic Equation");

        javax.swing.GroupLayout solveEquationButtonPanelLayout = new javax.swing.GroupLayout(solveEquationButtonPanel);
        solveEquationButtonPanel.setLayout(solveEquationButtonPanelLayout);
        solveEquationButtonPanelLayout.setHorizontalGroup(
            solveEquationButtonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, solveEquationButtonPanelLayout.createSequentialGroup()
                .addContainerGap(201, Short.MAX_VALUE)
                .addComponent(solveQuadraticEquationButton)
                .addContainerGap())
        );
        solveEquationButtonPanelLayout.setVerticalGroup(
            solveEquationButtonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(solveEquationButtonPanelLayout.createSequentialGroup()
                .addComponent(solveQuadraticEquationButton)
                .addGap(0, 17, Short.MAX_VALUE))
        );

        solutionPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        solutionTitleLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        solutionTitleLabel.setText("Quadratic Equation Solution");

        coefficientASolutionLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        coefficientASolutionLabel.setText("Coefficient a :");

        coefficientANonEditableTextField.setEditable(false);
        coefficientANonEditableTextField.setBackground(new java.awt.Color(229, 229, 238));
        coefficientANonEditableTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        coefficientANonEditableTextField.setText("?");

        coefficientBSolutionLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        coefficientBSolutionLabel.setText("Coefficient b :");

        coefficientBNonEditableTextField.setEditable(false);
        coefficientBNonEditableTextField.setBackground(new java.awt.Color(229, 229, 238));
        coefficientBNonEditableTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        coefficientBNonEditableTextField.setText("?");

        constantCSolutionLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        constantCSolutionLabel.setText("Constant c :");

        constantCNonEditableTextField.setEditable(false);
        constantCNonEditableTextField.setBackground(new java.awt.Color(229, 229, 238));
        constantCNonEditableTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        constantCNonEditableTextField.setText("?");

        javax.swing.GroupLayout solutionCoefficientsPanelLayout = new javax.swing.GroupLayout(solutionCoefficientsPanel);
        solutionCoefficientsPanel.setLayout(solutionCoefficientsPanelLayout);
        solutionCoefficientsPanelLayout.setHorizontalGroup(
            solutionCoefficientsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(solutionCoefficientsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(coefficientASolutionLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(coefficientANonEditableTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addComponent(coefficientBSolutionLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(coefficientBNonEditableTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(constantCSolutionLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(constantCNonEditableTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
                .addContainerGap())
        );
        solutionCoefficientsPanelLayout.setVerticalGroup(
            solutionCoefficientsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(solutionCoefficientsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(solutionCoefficientsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(coefficientBSolutionLabel)
                    .addComponent(coefficientBNonEditableTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(constantCSolutionLabel)
                    .addComponent(constantCNonEditableTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(coefficientASolutionLabel)
                    .addComponent(coefficientANonEditableTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 6, Short.MAX_VALUE))
        );

        coefficientASolutionLabel.getAccessibleContext().setAccessibleName("a :");

        typeOfRootsLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        typeOfRootsLabel.setText("Type of Roots:");

        typeOfRootsNonEditableTextField.setEditable(false);
        typeOfRootsNonEditableTextField.setBackground(new java.awt.Color(229, 229, 238));
        typeOfRootsNonEditableTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        typeOfRootsNonEditableTextField.setText("?");

        javax.swing.GroupLayout typeOfRootsPanelLayout = new javax.swing.GroupLayout(typeOfRootsPanel);
        typeOfRootsPanel.setLayout(typeOfRootsPanelLayout);
        typeOfRootsPanelLayout.setHorizontalGroup(
            typeOfRootsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(typeOfRootsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(typeOfRootsLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(typeOfRootsNonEditableTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(195, Short.MAX_VALUE))
        );
        typeOfRootsPanelLayout.setVerticalGroup(
            typeOfRootsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(typeOfRootsPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(typeOfRootsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(typeOfRootsLabel)
                    .addComponent(typeOfRootsNonEditableTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        firstRootLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        firstRootLabel.setText("First Root:");

        firstRootNonEditableTextField.setEditable(false);
        firstRootNonEditableTextField.setBackground(new java.awt.Color(229, 229, 238));
        firstRootNonEditableTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        firstRootNonEditableTextField.setText("?");

        secondRootLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        secondRootLabel.setText("Second Root:");

        secondRootNonEditableTextField.setEditable(false);
        secondRootNonEditableTextField.setBackground(new java.awt.Color(229, 229, 238));
        secondRootNonEditableTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        secondRootNonEditableTextField.setText("?");

        javax.swing.GroupLayout firstAndSecondRootsPanelLayout = new javax.swing.GroupLayout(firstAndSecondRootsPanel);
        firstAndSecondRootsPanel.setLayout(firstAndSecondRootsPanelLayout);
        firstAndSecondRootsPanelLayout.setHorizontalGroup(
            firstAndSecondRootsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(firstAndSecondRootsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(firstRootLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(firstRootNonEditableTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addComponent(secondRootLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(secondRootNonEditableTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(35, Short.MAX_VALUE))
        );
        firstAndSecondRootsPanelLayout.setVerticalGroup(
            firstAndSecondRootsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, firstAndSecondRootsPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(firstAndSecondRootsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(firstRootLabel)
                    .addComponent(firstRootNonEditableTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(secondRootLabel)
                    .addComponent(secondRootNonEditableTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        discriminantLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        discriminantLabel.setText("Discriminant:");

        discriminantNonEditableTextField.setEditable(false);
        discriminantNonEditableTextField.setBackground(new java.awt.Color(229, 229, 238));
        discriminantNonEditableTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        discriminantNonEditableTextField.setText("?");

        vertexLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        vertexLabel.setText("Vertex (x, y):");

        vertexNonEditableTextField.setEditable(false);
        vertexNonEditableTextField.setBackground(new java.awt.Color(229, 229, 238));
        vertexNonEditableTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        vertexNonEditableTextField.setText("?");

        javax.swing.GroupLayout discriminantAndVertexPanelLayout = new javax.swing.GroupLayout(discriminantAndVertexPanel);
        discriminantAndVertexPanel.setLayout(discriminantAndVertexPanelLayout);
        discriminantAndVertexPanelLayout.setHorizontalGroup(
            discriminantAndVertexPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(discriminantAndVertexPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(discriminantLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(discriminantNonEditableTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(vertexLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(vertexNonEditableTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );
        discriminantAndVertexPanelLayout.setVerticalGroup(
            discriminantAndVertexPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(discriminantAndVertexPanelLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(discriminantAndVertexPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(discriminantLabel)
                    .addComponent(vertexNonEditableTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(vertexLabel)
                    .addComponent(discriminantNonEditableTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        sumOfRootsLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        sumOfRootsLabel.setText("Sum of Roots (-b/a):");

        sumOfRootsNonEditableTextField.setEditable(false);
        sumOfRootsNonEditableTextField.setBackground(new java.awt.Color(229, 229, 238));
        sumOfRootsNonEditableTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        sumOfRootsNonEditableTextField.setText("?");

        productOfRootsLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        productOfRootsLabel.setText("Product of Roots (c/a):");

        productOfRootsNonEditableTextField.setEditable(false);
        productOfRootsNonEditableTextField.setBackground(new java.awt.Color(229, 229, 238));
        productOfRootsNonEditableTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        productOfRootsNonEditableTextField.setText("?");

        javax.swing.GroupLayout sumAndProductOfRootsPanelLayout = new javax.swing.GroupLayout(sumAndProductOfRootsPanel);
        sumAndProductOfRootsPanel.setLayout(sumAndProductOfRootsPanelLayout);
        sumAndProductOfRootsPanelLayout.setHorizontalGroup(
            sumAndProductOfRootsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sumAndProductOfRootsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(sumOfRootsLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sumOfRootsNonEditableTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(productOfRootsLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(productOfRootsNonEditableTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        sumAndProductOfRootsPanelLayout.setVerticalGroup(
            sumAndProductOfRootsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, sumAndProductOfRootsPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(sumAndProductOfRootsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sumOfRootsLabel)
                    .addComponent(sumOfRootsNonEditableTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(productOfRootsLabel)
                    .addComponent(productOfRootsNonEditableTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout solutionPanelLayout = new javax.swing.GroupLayout(solutionPanel);
        solutionPanel.setLayout(solutionPanelLayout);
        solutionPanelLayout.setHorizontalGroup(
            solutionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(solutionPanelLayout.createSequentialGroup()
                .addGroup(solutionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(solutionPanelLayout.createSequentialGroup()
                        .addGap(201, 201, 201)
                        .addComponent(solutionTitleLabel))
                    .addGroup(solutionPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(solutionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(discriminantAndVertexPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(solutionCoefficientsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(typeOfRootsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(firstAndSecondRootsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(sumAndProductOfRootsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        solutionPanelLayout.setVerticalGroup(
            solutionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(solutionPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(solutionTitleLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(solutionCoefficientsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(typeOfRootsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(firstAndSecondRootsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(discriminantAndVertexPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(sumAndProductOfRootsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(quadraticEquationPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(104, 104, 104))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(solveEquationButtonPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(solutionPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(145, 145, 145)
                        .addComponent(titleLabel)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(titleLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(quadraticEquationPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(solveEquationButtonPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(solutionPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap(7, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    /**
     * Initialize the three user input textfields where users enter a,b and c values
     * of the quadratic equation
     * where the quadratic equation refers to
     * ax^2 + bx + c = 0
     *
     * Whenever the value of either of the three textfield changes, all displayed solutions
     * will be reset and cleared ( to prevent display of stale solution to user)
     * */
    private void initializeThreeUserInputTextFields(){

        resetAllSolutionFieldsWhenInputTextFieldValueChanges(this.coefficientATextField);
        resetAllSolutionFieldsWhenInputTextFieldValueChanges(this.coefficientBTextField);
        resetAllSolutionFieldsWhenInputTextFieldValueChanges(this.constantCTextField);

    }


    /**
     * Reset all displayed solution fields when the user changes the value of an
     * input textfield
     *
     * @param textField the textfield of interest
     * */
    private void resetAllSolutionFieldsWhenInputTextFieldValueChanges(JTextField textField){
        textField.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                resetAllSolutionTextFields();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                resetAllSolutionTextFields();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                resetAllSolutionTextFields();
            }
        });
    }


    /**
     * Initialize the event handler for the solve quadratic equation button, such
     * that it will extract user input and display the solution
     * */
    private void initializeSolveQuadraticEquationButton(){

        this.solveQuadraticEquationButton.addActionListener(e -> {
            getUserInputsAndDisplayQuadraticEquationSolution();
        });
    }


    /**
     * Retrieve the user inputs (coefficients and constant of the quadratic equation)
     * and solve the quadratic solution. Then display the corresponding solution
     *
     * If the user entered invalid inputs, display a dialog showing the error message
     * */
    private void getUserInputsAndDisplayQuadraticEquationSolution(){

        try{
            double coefficientA = getCoefficientA();
            double coefficientB = getCoefficientB();
            double constantC = getConstantC();

            QuadraticEquationSolver solver = new QuadraticEquationSolver(coefficientA,
                    coefficientB,constantC);

            displayQuadraticEquationSolution(solver);
        }
        catch (Exception e){

            JOptionPane.showMessageDialog(getParent(),e.getMessage(), "Error",
                    JOptionPane.ERROR_MESSAGE);
        }

    }


    /**
     * Returns the value of coefficient a of the quadratic equation which the user entered
     *  where the quadratic equation refers to
     *  ax^2 + bx + c = 0
     *
     * @return a double representing the value of coefficient a
     * @throws NumberFormatException if the user entered a non-valid coefficient a (not a number)
     * */
    private double getCoefficientA(){

        try{
            String coefficientAString = this.coefficientATextField.getText().trim();
            return Double.parseDouble(coefficientAString);
        }
        catch (NumberFormatException e){

            throw new NumberFormatException("Coefficient A (first text box) is not a valid number");
        }
    }


    /**
     * Returns the value of coefficient b of the quadratic equation which the user entered
     *  where the quadratic equation refers to
     *  ax^2 + bx + c = 0
     *
     * @return a double representing the value of coefficient b
     * @throws NumberFormatException if the user entered a non-valid coefficient b (not a number)
     * */
    private double getCoefficientB(){

        try{
            String coefficientBString = this.coefficientBTextField.getText().trim();
            return Double.parseDouble(coefficientBString);
        }
        catch (NumberFormatException e){

            throw new NumberFormatException("Coefficient B (second text box) is not a valid number");
        }
    }


    /**
     * Returns the value of coefficient a of the quadratic equation which the user entered
     *  where the quadratic equation refers to
     *  ax^2 + bx + c = 0
     *
     * @return a double representing the value of coefficient c
     * @throws NumberFormatException if the user entered a non-valid constant c (not a number)
     * */
    private double getConstantC(){

        try{
            String constantCString = this.constantCTextField.getText().trim();
            return Double.parseDouble(constantCString);
        }
        catch (NumberFormatException e){

            throw new NumberFormatException("Constant C (third text box) is not a valid number");
        }
    }


    /**
     * Display the equation to the quadratic solution
     *
     * @param quadraticEquationSolver instance of QuadraticEquationSolver containing the
     *                                solution of the quadratic equation
     * */
    private void displayQuadraticEquationSolution(QuadraticEquationSolver quadraticEquationSolver){

        displayCoefficientA(quadraticEquationSolver);
        displayCoefficientB(quadraticEquationSolver);
        displayConstantC(quadraticEquationSolver);

        displayTypeOfRoots(quadraticEquationSolver);
        displayFirstRoot(quadraticEquationSolver);
        displaySecondRoot(quadraticEquationSolver);

        displayDiscriminant(quadraticEquationSolver);
        displayVertex(quadraticEquationSolver);

        displaySumOfRoots(quadraticEquationSolver);
        displayProductOfRoots(quadraticEquationSolver);
    }



    /**
     * Displays the coefficient 'a' of the quadratic equation
     *  where the quadratic equation refers to
     *  ax^2 + bx + c = 0
     *
     * @param quadraticEquationSolver instance of QuadraticEquationSolver containing the
     *                                solution of the quadratic equation
     * */
    private void displayCoefficientA(QuadraticEquationSolver quadraticEquationSolver){

        double coefficientA = quadraticEquationSolver.getCoefficientA();
        String coefficientAString = String.valueOf(coefficientA);

        this.coefficientANonEditableTextField.setText(coefficientAString);
    }


    /**
     * Displays the coefficient b of the quadratic equation
     *  where the quadratic equation refers to
     *  ax^2 + bx + c = 0
     *
     * @param quadraticEquationSolver instance of QuadraticEquationSolver containing the
     *                                solution of the quadratic equation
     * */
    private void displayCoefficientB(QuadraticEquationSolver quadraticEquationSolver){

        double coefficientB = quadraticEquationSolver.getCoefficientB();

        String coefficientBString = String.valueOf(coefficientB);

        this.coefficientBNonEditableTextField.setText(coefficientBString);
    }


    /**
     * Displays the constant c of the quadratic equation
     *  where the quadratic equation refers to
     *  ax^2 + bx + c = 0
     *
     * @param quadraticEquationSolver instance of QuadraticEquationSolver containing the
     *                                solution of the quadratic equation
     * */
    private void displayConstantC(QuadraticEquationSolver quadraticEquationSolver){

        double constantC = quadraticEquationSolver.getConstantC();

        String constantCString = String.valueOf(constantC);

        this.constantCNonEditableTextField.setText(constantCString);
    }


    /**
     * Displays the type of roots of the quadratic equation
     *
     * @param quadraticEquationSolver instance of QuadraticEquationSolver containing the
     *                                solution of the quadratic equation
     * */
    private void displayTypeOfRoots(QuadraticEquationSolver quadraticEquationSolver){

        QuadraticEquationSolver.RootType rootType = quadraticEquationSolver.getRootType();

        String rootTypeToDisplay = null;

        switch (rootType){

            case REAL_AND_DISTINCT:
                rootTypeToDisplay = "Real and Distinct";
                break;

            case REAL_AND_EQUAL:
                rootTypeToDisplay = "Real and Equal";
                break;

            case COMPLEX:
                rootTypeToDisplay = "Complex";
                break;
        }

        this.typeOfRootsNonEditableTextField.setText(rootTypeToDisplay);
    }



    /**
     * Displays the first root of the quadratic equation
     *
     * @param quadraticEquationSolver instance of QuadraticEquationSolver containing the
     *                                solution of the quadratic equation
     * */
    private void displayFirstRoot(QuadraticEquationSolver quadraticEquationSolver){

        String firstRootToDisplayString = null;

        Object firstRoot = quadraticEquationSolver.getFirstRoot();

        if (quadraticEquationSolver.getRootType() == QuadraticEquationSolver.RootType.COMPLEX){

            IComplexNumber firstRootComplexNumber = (IComplexNumber) firstRoot;

            double realPart = firstRootComplexNumber.getRealPart();
            double imaginaryPart = firstRootComplexNumber.getImaginaryPart();

            firstRootToDisplayString = String.format("%f - %fi", realPart, Math.abs(imaginaryPart));
        }
        else{
            Double firstRootDouble = (Double) firstRoot;
            firstRootToDisplayString = firstRootDouble.toString();
        }


        this.firstRootNonEditableTextField.setText(firstRootToDisplayString);
    }


    /**
     * Displays the second root of the quadratic equation
     *
     * @param quadraticEquationSolver instance of QuadraticEquationSolver containing the
     *                                solution of the quadratic equation
     * */
    private void displaySecondRoot(QuadraticEquationSolver quadraticEquationSolver){

        String secondRootToDisplayString;

        Object secondRoot = quadraticEquationSolver.getSecondRoot();

        if (quadraticEquationSolver.getRootType() == QuadraticEquationSolver.RootType.COMPLEX){

            IComplexNumber firstRootComplexNumber = (IComplexNumber) secondRoot;

            double realPart = firstRootComplexNumber.getRealPart();
            double imaginaryPart = firstRootComplexNumber.getImaginaryPart();

            secondRootToDisplayString = String.format("%f + %fi", realPart, imaginaryPart);
        }
        else{
            Double secondRootDouble = (Double) secondRoot;
            secondRootToDisplayString = secondRootDouble.toString();
        }


        this.secondRootNonEditableTextField.setText(secondRootToDisplayString);
    }



    /**
     * Displays the discriminant of the quadratic equation
     *
     * @param quadraticEquationSolver instance of QuadraticEquationSolver containing the
     *                                solution of the quadratic equation
     * */
    private void displayDiscriminant(QuadraticEquationSolver quadraticEquationSolver){

        double discriminant = quadraticEquationSolver.getDiscriminant();
        String discriminantString = String.valueOf(discriminant);
        this.discriminantNonEditableTextField.setText(discriminantString);

    }


    /**
     * Displays the vertex (x,y) coordinates of the quadratic equation
     *
     * Vertex refers to either the highest or lowest point of a quadratic equation
     *
     * @param quadraticEquationSolver instance of QuadraticEquationSolver containing the
     *                                solution of the quadratic equation
     * */
    private void displayVertex(QuadraticEquationSolver quadraticEquationSolver){

        IVertex vertex = quadraticEquationSolver.getVertex();

        double xVertex = vertex.getXCoordinate();
        double yVertex = vertex.getYCoordinate();

        String vertexToDisplay = String.format("(%f, %f)", xVertex, yVertex);

        this.vertexNonEditableTextField.setText(vertexToDisplay);
    }



    /**
     * Displays the sum of roots of the quadratic equation
     *
     * @param quadraticEquationSolver instance of QuadraticEquationSolver containing the
     *                                solution of the quadratic equation
     * */
    private void displaySumOfRoots(QuadraticEquationSolver quadraticEquationSolver){

        double sumOfRoots = quadraticEquationSolver.getSumOfRoots();
        String sumOfRootsString = String.valueOf(sumOfRoots);
        this.sumOfRootsNonEditableTextField.setText(sumOfRootsString);
    }


    /**
     * Displays the product of roots of the quadratic equation
     *
     * @param quadraticEquationSolver instance of QuadraticEquationSolver containing the
     *                                solution of the quadratic equation
     * */
    private void displayProductOfRoots(QuadraticEquationSolver quadraticEquationSolver){

        double productOfRoots = quadraticEquationSolver.getProductOfRoots();
        String productOfRootsString = String.valueOf(productOfRoots);

        this.productOfRootsNonEditableTextField.setText(productOfRootsString);
    }




    private void resetAllSolutionTextFields(){

        String questionMark = "?";

        this.coefficientANonEditableTextField.setText(questionMark);
        this.coefficientBNonEditableTextField.setText(questionMark);
        this.constantCNonEditableTextField.setText(questionMark);

        this.typeOfRootsNonEditableTextField.setText(questionMark);
        this.firstRootNonEditableTextField.setText(questionMark);
        this.secondRootNonEditableTextField.setText(questionMark);

        this.discriminantNonEditableTextField.setText(questionMark);
        this.vertexNonEditableTextField.setText(questionMark);


        this.sumOfRootsNonEditableTextField.setText(questionMark);
        this.productOfRootsNonEditableTextField.setText(questionMark);
    }



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField coefficientANonEditableTextField;
    private javax.swing.JLabel coefficientASolutionLabel;
    private javax.swing.JTextField coefficientATextField;
    private javax.swing.JTextField coefficientBNonEditableTextField;
    private javax.swing.JLabel coefficientBSolutionLabel;
    private javax.swing.JTextField coefficientBTextField;
    private javax.swing.JTextField constantCNonEditableTextField;
    private javax.swing.JLabel constantCSolutionLabel;
    private javax.swing.JTextField constantCTextField;
    private javax.swing.JPanel discriminantAndVertexPanel;
    private javax.swing.JLabel discriminantLabel;
    private javax.swing.JTextField discriminantNonEditableTextField;
    private javax.swing.JLabel equalsLabel;
    private javax.swing.JPanel firstAndSecondRootsPanel;
    private javax.swing.JLabel firstPlusSymbolLabel;
    private javax.swing.JLabel firstRootLabel;
    private javax.swing.JTextField firstRootNonEditableTextField;
    private javax.swing.JLabel productOfRootsLabel;
    private javax.swing.JTextField productOfRootsNonEditableTextField;
    private javax.swing.JPanel quadraticEquationPanel;
    private javax.swing.JLabel secondPlusSymbolLabel;
    private javax.swing.JLabel secondRootLabel;
    private javax.swing.JTextField secondRootNonEditableTextField;
    private javax.swing.JPanel solutionCoefficientsPanel;
    private javax.swing.JPanel solutionPanel;
    private javax.swing.JLabel solutionTitleLabel;
    private javax.swing.JPanel solveEquationButtonPanel;
    private javax.swing.JButton solveQuadraticEquationButton;
    private javax.swing.JPanel sumAndProductOfRootsPanel;
    private javax.swing.JLabel sumOfRootsLabel;
    private javax.swing.JTextField sumOfRootsNonEditableTextField;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JLabel typeOfRootsLabel;
    private javax.swing.JTextField typeOfRootsNonEditableTextField;
    private javax.swing.JPanel typeOfRootsPanel;
    private javax.swing.JLabel vertexLabel;
    private javax.swing.JTextField vertexNonEditableTextField;
    private javax.swing.JLabel xLabel;
    private javax.swing.JLabel xSquareLabel;
    private javax.swing.JLabel zeroLabel;
    // End of variables declaration//GEN-END:variables
}
